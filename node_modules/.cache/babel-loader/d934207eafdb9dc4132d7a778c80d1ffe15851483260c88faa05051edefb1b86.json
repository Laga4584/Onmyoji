{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef } from \"react\";\n\n//hook\nfunction useMoveScroll(props) {\n  _s();\n  const element = useRef(null);\n  const onMoveToElement = () => {\n    //console.log(element.current);\n    //element.current?.scrollIntoView({ behavior: 'smooth' });\n    window.scrollTo({\n      top: element.current.getBoundingClientRect().top,\n      behavior: \"smooth\"\n    });\n    //window.scrollTo(0, element.current.getBoundingClientRect().bottom);\n  };\n\n  return {\n    element,\n    onMoveToElement\n  };\n}\n_s(useMoveScroll, \"hwXVKBl8T6we8uqMoWVI7amgmdI=\");\nexport default useMoveScroll;","map":{"version":3,"names":["useRef","useMoveScroll","props","element","onMoveToElement","window","scrollTo","top","current","getBoundingClientRect","behavior"],"sources":["C:/Users/USER/Desktop/프론트엔드 과정/onmyoji/src/hooks/useMoveScroll.js"],"sourcesContent":["import { useRef } from \"react\";\r\n\r\n//hook\r\nfunction useMoveScroll(props) {\r\n    const element = useRef(null);\r\n    const onMoveToElement = () => {\r\n      //console.log(element.current);\r\n      //element.current?.scrollIntoView({ behavior: 'smooth' });\r\n      window.scrollTo({\r\n        top:\r\n          element.current.getBoundingClientRect().top,\r\n        behavior: \"smooth\",\r\n      });\r\n        //window.scrollTo(0, element.current.getBoundingClientRect().bottom);\r\n    };\r\n    return { element, onMoveToElement};\r\n  }\r\n  \r\n  export default useMoveScroll;"],"mappings":";AAAA,SAASA,MAAM,QAAQ,OAAO;;AAE9B;AACA,SAASC,aAAa,CAACC,KAAK,EAAE;EAAA;EAC1B,MAAMC,OAAO,GAAGH,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAMI,eAAe,GAAG,MAAM;IAC5B;IACA;IACAC,MAAM,CAACC,QAAQ,CAAC;MACdC,GAAG,EACDJ,OAAO,CAACK,OAAO,CAACC,qBAAqB,EAAE,CAACF,GAAG;MAC7CG,QAAQ,EAAE;IACZ,CAAC,CAAC;IACA;EACJ,CAAC;;EACD,OAAO;IAAEP,OAAO;IAAEC;EAAe,CAAC;AACpC;AAAC,GAbMH,aAAa;AAepB,eAAeA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}