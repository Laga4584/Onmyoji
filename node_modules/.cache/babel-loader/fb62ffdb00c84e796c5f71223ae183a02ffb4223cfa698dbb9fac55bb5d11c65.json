{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef, useCallback, useEffect } from 'react';\nconst useScrollFadeIn = (direction, duration, delay) => {\n  _s();\n  const dom = useRef();\n  const handleDirection = name => {\n    switch (name) {\n      case 'up':\n        return 'translate3d(0, 50%, 0)';\n      case 'down':\n        return 'translate3d(0, -50%, 0)';\n      case 'left':\n        return 'translate3d(50%, 0, 0)';\n      case 'right':\n        return 'translate3d(-50%, 0, 0)';\n      default:\n        return;\n    }\n    ;\n  };\n  const handleScroll = useCallback(_ref => {\n    let [entry] = _ref;\n    const {\n      current\n    } = dom;\n    if (entry.isIntersecting) {\n      current.style.transitionProperty = 'all';\n      current.style.transitionDuration = `${duration}s`;\n      current.style.transitionTimingFunction = 'cubic-bezier(0, 0, 0.2, 1)';\n      current.style.transitionDelay = `${delay}s`;\n      current.style.opacity = 1;\n      current.style.transform = 'translate3d(0, 0, 0)';\n    } else {\n      /*\r\n      current.style.transitionProperty = 'all';\r\n      current.style.transitionDuration = `0s`;\r\n      //current.style.transitionTimingFunction = 'cubic-bezier(0, 0, 0.2, 1)';\r\n      current.style.transitionDelay = `0s`;\r\n      current.style.opacity = 0;\r\n      current.style.transform = handleDirection(direction);\r\n      */\n    }\n    ;\n  }, [delay, duration, direction]);\n  useEffect(() => {\n    let observer;\n    const {\n      current\n    } = dom;\n    if (current) {\n      observer = new IntersectionObserver(handleScroll, {\n        threshold: 0.5\n      });\n      observer.observe(current);\n    }\n    return () => observer && observer.disconnect();\n  }, [handleScroll]);\n  return {\n    ref: dom,\n    style: {\n      opacity: 0,\n      transform: handleDirection(direction)\n    }\n  };\n};\n_s(useScrollFadeIn, \"n7jokSJEQ/F7j7MC1AK9uCOvYGs=\");\nexport default useScrollFadeIn;","map":{"version":3,"names":["useRef","useCallback","useEffect","useScrollFadeIn","direction","duration","delay","dom","handleDirection","name","handleScroll","entry","current","isIntersecting","style","transitionProperty","transitionDuration","transitionTimingFunction","transitionDelay","opacity","transform","observer","IntersectionObserver","threshold","observe","disconnect","ref"],"sources":["C:/Users/USER/Desktop/프론트엔드 과정/onmyoji/src/hooks/useScrollFadeIn.js"],"sourcesContent":["import { useRef, useCallback, useEffect } from 'react'\r\n\r\nconst useScrollFadeIn = (direction, duration, delay) => {\r\n    const dom = useRef();\r\n  \r\n    const handleDirection = (name) => {\r\n      switch (name) {\r\n        case 'up':\r\n          return 'translate3d(0, 50%, 0)';\r\n        case 'down':\r\n          return 'translate3d(0, -50%, 0)';\r\n        case 'left':\r\n          return 'translate3d(50%, 0, 0)';\r\n        case 'right':\r\n          return 'translate3d(-50%, 0, 0)';\r\n        default:\r\n          return;\r\n      };\r\n    };\r\n  \r\n    const handleScroll = useCallback(\r\n      ([entry]) => {\r\n        const { current } = dom;\r\n        if (entry.isIntersecting) {\r\n          current.style.transitionProperty = 'all';\r\n          current.style.transitionDuration = `${duration}s`;\r\n          current.style.transitionTimingFunction = 'cubic-bezier(0, 0, 0.2, 1)';\r\n          current.style.transitionDelay = `${delay}s`;\r\n          current.style.opacity = 1;\r\n          current.style.transform = 'translate3d(0, 0, 0)';\r\n        }else{\r\n            /*\r\n            current.style.transitionProperty = 'all';\r\n            current.style.transitionDuration = `0s`;\r\n            //current.style.transitionTimingFunction = 'cubic-bezier(0, 0, 0.2, 1)';\r\n            current.style.transitionDelay = `0s`;\r\n            current.style.opacity = 0;\r\n            current.style.transform = handleDirection(direction);\r\n            */\r\n        };\r\n      },\r\n      [delay, duration, direction],\r\n    );\r\n  \r\n    useEffect(() => {\r\n      let observer;\r\n      const { current } = dom;\r\n  \r\n      if (current) {\r\n        observer = new IntersectionObserver(handleScroll, { threshold: 0.5 });\r\n        observer.observe(current);\r\n      }\r\n  \r\n      return () => observer && observer.disconnect();\r\n    }, [handleScroll]);\r\n  \r\n    return {\r\n      ref: dom,\r\n      style: {\r\n        opacity: 0,\r\n        transform: handleDirection(direction),\r\n      },\r\n    };\r\n  };\r\n  \r\n  export default useScrollFadeIn;"],"mappings":";AAAA,SAASA,MAAM,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAEtD,MAAMC,eAAe,GAAG,CAACC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,KAAK;EAAA;EACpD,MAAMC,GAAG,GAAGP,MAAM,EAAE;EAEpB,MAAMQ,eAAe,GAAIC,IAAI,IAAK;IAChC,QAAQA,IAAI;MACV,KAAK,IAAI;QACP,OAAO,wBAAwB;MACjC,KAAK,MAAM;QACT,OAAO,yBAAyB;MAClC,KAAK,MAAM;QACT,OAAO,wBAAwB;MACjC,KAAK,OAAO;QACV,OAAO,yBAAyB;MAClC;QACE;IAAO;IACV;EACH,CAAC;EAED,MAAMC,YAAY,GAAGT,WAAW,CAC9B,QAAa;IAAA,IAAZ,CAACU,KAAK,CAAC;IACN,MAAM;MAAEC;IAAQ,CAAC,GAAGL,GAAG;IACvB,IAAII,KAAK,CAACE,cAAc,EAAE;MACxBD,OAAO,CAACE,KAAK,CAACC,kBAAkB,GAAG,KAAK;MACxCH,OAAO,CAACE,KAAK,CAACE,kBAAkB,GAAI,GAAEX,QAAS,GAAE;MACjDO,OAAO,CAACE,KAAK,CAACG,wBAAwB,GAAG,4BAA4B;MACrEL,OAAO,CAACE,KAAK,CAACI,eAAe,GAAI,GAAEZ,KAAM,GAAE;MAC3CM,OAAO,CAACE,KAAK,CAACK,OAAO,GAAG,CAAC;MACzBP,OAAO,CAACE,KAAK,CAACM,SAAS,GAAG,sBAAsB;IAClD,CAAC,MAAI;MACD;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;IAPY;IAQH;EACH,CAAC,EACD,CAACd,KAAK,EAAED,QAAQ,EAAED,SAAS,CAAC,CAC7B;EAEDF,SAAS,CAAC,MAAM;IACd,IAAImB,QAAQ;IACZ,MAAM;MAAET;IAAQ,CAAC,GAAGL,GAAG;IAEvB,IAAIK,OAAO,EAAE;MACXS,QAAQ,GAAG,IAAIC,oBAAoB,CAACZ,YAAY,EAAE;QAAEa,SAAS,EAAE;MAAI,CAAC,CAAC;MACrEF,QAAQ,CAACG,OAAO,CAACZ,OAAO,CAAC;IAC3B;IAEA,OAAO,MAAMS,QAAQ,IAAIA,QAAQ,CAACI,UAAU,EAAE;EAChD,CAAC,EAAE,CAACf,YAAY,CAAC,CAAC;EAElB,OAAO;IACLgB,GAAG,EAAEnB,GAAG;IACRO,KAAK,EAAE;MACLK,OAAO,EAAE,CAAC;MACVC,SAAS,EAAEZ,eAAe,CAACJ,SAAS;IACtC;EACF,CAAC;AACH,CAAC;AAAC,GA7DED,eAAe;AA+DnB,eAAeA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}