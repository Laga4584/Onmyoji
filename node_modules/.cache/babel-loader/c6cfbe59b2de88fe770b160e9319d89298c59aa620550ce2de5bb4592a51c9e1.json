{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef } from \"react\";\n\n//hook\nfunction useMoveScroll() {\n  _s();\n  const element = useRef(null);\n  const onMoveToElement = () => {\n    var _element$current;\n    //console.log(element.current);\n    //element.current?.scrollIntoView({ behavior: 'smooth' });\n    window.scrollTo({\n      top: window.scrollY + ((_element$current = element.current) === null || _element$current === void 0 ? void 0 : _element$current.getBoundingClientRect().top),\n      behavior: \"smooth\"\n    });\n  };\n  return {\n    element,\n    onMoveToElement\n  };\n}\n_s(useMoveScroll, \"hwXVKBl8T6we8uqMoWVI7amgmdI=\");\nexport default useMoveScroll;","map":{"version":3,"names":["useRef","useMoveScroll","element","onMoveToElement","window","scrollTo","top","scrollY","current","getBoundingClientRect","behavior"],"sources":["C:/Users/USER/Desktop/프론트엔드 과정/onmyoji/src/hooks/useMoveScroll.js"],"sourcesContent":["import { useRef } from \"react\";\r\n\r\n//hook\r\nfunction useMoveScroll() {\r\n    const element = useRef(null);\r\n    const onMoveToElement = () => {\r\n      //console.log(element.current);\r\n      //element.current?.scrollIntoView({ behavior: 'smooth' });\r\n      window.scrollTo({\r\n        top:\r\n          window.scrollY+element.current?.getBoundingClientRect().top,\r\n        behavior: \"smooth\",\r\n      });\r\n      \r\n    };\r\n    return { element, onMoveToElement};\r\n  }\r\n  \r\n  export default useMoveScroll;"],"mappings":";AAAA,SAASA,MAAM,QAAQ,OAAO;;AAE9B;AACA,SAASC,aAAa,GAAG;EAAA;EACrB,MAAMC,OAAO,GAAGF,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAMG,eAAe,GAAG,MAAM;IAAA;IAC5B;IACA;IACAC,MAAM,CAACC,QAAQ,CAAC;MACdC,GAAG,EACDF,MAAM,CAACG,OAAO,wBAACL,OAAO,CAACM,OAAO,qDAAf,iBAAiBC,qBAAqB,EAAE,CAACH,GAAG;MAC7DI,QAAQ,EAAE;IACZ,CAAC,CAAC;EAEJ,CAAC;EACD,OAAO;IAAER,OAAO;IAAEC;EAAe,CAAC;AACpC;AAAC,GAbMF,aAAa;AAepB,eAAeA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}